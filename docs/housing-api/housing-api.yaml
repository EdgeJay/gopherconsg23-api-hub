openapi: '3.0.0'
info:
  title: Housing API
  version: '1.0.0'
servers:
  - url: https://housing-api.example
paths:
  /towns:
    get:
      description: >
        Endpoint to list of public housing towns
      operationId: getAvailableTowns
      responses:
        '200':
          description: List of available towns returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTownsSuccessResponse'
              examples:
                allTowns:
                  summary: All towns
                  value:
                    {
                      "data": [
                        {
                          "id": "BKM",
                          "town_name": "BKM Town",
                          "created_on": "2023-01-01T00:00:00.000Z"
                        },
                        {
                          "id": "CCK",
                          "town_name": "CCK Town",
                          "created_on": "2023-01-01T00:00:00.000Z"
                        },
                        {
                          "id": "PSR",
                          "town_name": "PSR Town",
                          "created_on": "2023-01-01T00:00:00.000Z"
                        },
                        {
                          "id": "TAM",
                          "town_name": "TAM Town",
                          "created_on": "2023-01-01T00:00:00.000Z"
                        },
                        {
                          "id": "TPY",
                          "town_name": "TPY Town",
                          "created_on": "2023-01-01T00:00:00.000Z"
                        },
                        {
                          "id": "YIS",
                          "town_name": "YIS Town",
                          "created_on": "2023-01-01T00:00:00.000Z"
                        }
                      ]
                    }
  /available-apartments:
    get:
      description: >
        Endpoint to retrieve public housing apartments available for purchase
      operationId: getAvailableApartments
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            description: >
              Page number to query records from. Default value is 1 if not specified.
        - in: query
          name: size
          required: false
          schema:
            type: integer
            description: >
              Page size. Default value is 10 if not specified.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvailableApartmentsSuccessResponse'

components:
  schemas:
    GetTownsSuccessResponse:
      type: object
      require:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Town'
    Town:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of town
        town_name:
          type: string
          description: Name of town
          enum:
            - BKM Town
            - CCK Town
            - PSR Town
            - TAM Town
            - TPY Town
            - YIS Town
        created_on:
          type: string
          pattern: ^20(1[0-9]|2[1-3])-(0[1-9]|1[1-2])-(0[1-9]|[1-2][0-9]|30)T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]Z$
          description: |
            Date/time when entry was created
    GetAvailableApartmentsSuccessResponse:
      type: object
      require:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Apartment'
    Apartment:
      type: object
      properties:
        sale_period_id:
          type: string
          pattern: ^\d$
          description: |
            ID representing sale period that apartment on sale is part of
        created_on:
          type: string
          pattern: ^20(1[0-9]|2[1-3])-(0[1-9]|1[1-2])-(0[1-9]|[1-2][0-9]|30)T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]Z$
          description: |
            Date/time when entry was created
        apt_type:
          type: string
          enum:
            - studio
            - 3-rm
            - 4-rm
            - 5-rm
          description: |
            Apartment type:
              * `studio` - Studio apartment
              * `3-rm` - 3-room apartment
              * `4-rm` - 4-room apartment
              * `5-rm` - 5-room apartment